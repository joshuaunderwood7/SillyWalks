<program>  -> #Start BEGIN <stmt_list> END 
<stmt_list> -> <statement> <statement_tail>  
<statement_tail>  -> <stmt_list> 
<statement_tail> -> lambda
<statement> -> ID :=<expression> ; #Assign($1,$3)
<statement> -> READ (<id_list>) ; 
<statement> -> WRITE (<expr_list>) ;
<id_list> -> ID #ReadId($1) <id_tail>
<id_tail> -> , <id_list> 
<id_tail> -> lambda
<expr_list> -> <expression> #WriteExpr($1) <expression_tail> 
<expression_tail> -> , <expr_list>  
<expression_tail> -> lambda
<expression> -> <primary> #Copy($1,$$) #Copy($1,$2) <primary_tail>  #Copy($2,$$)
<primary_tail> -> <add_op> <expression> #GenInfix($$,$1,$2,$$)
<primary_tail> -> lambda
<primary> -> (<expression>) #Copy($2,$$)
<primary> -> <ident> #Copy($1,$$) 
<primary> -> INTLITERAL #ProcessLiteral($1) #Copy($1,$$)
<add_op> -> +  #ProcessOp($1) #Copy($1,$$)
<add_op> -> - #ProcessOp($1)
<ident> -> ID #ProcessId($1)
<system_goal> -> <program> $ #Finish
